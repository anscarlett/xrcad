name: Build and Package WebGPU App in Android APK

on:
  push:
  pull_request:

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Add WASM target
        run: rustup target add wasm32-unknown-unknown
      - name: Build WASM
        run: cargo build --release --target wasm32-unknown-unknown
      - name: List WASM output
        run: ls -l target/wasm32-unknown-unknown/release
      - name: Upload WASM artifact
        uses: actions/upload-artifact@v4
        with:
          name: webgpu-wasm
          path: target/wasm32-unknown-unknown/release/xrcad_app.wasm
  build-apk:
    needs: build-wasm
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v4

      # Set up Rust and wasm-pack (assuming your WASM job uses this)
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install wasm-pack
        run: cargo install wasm-pack

      # Build your Rust WASM project
      - name: Build Rust WASM
        run: |
          wasm-pack build --target web --release --out-dir pkg

      # Set up Node.js and install Capacitor CLI
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      # Make a minimal Capacitor webapp
      - name: Create webapp
        run: |
          npx create-react-app webapp
          cd webapp
          npx cap init wasmapp com.example.wasmapp --web-dir build

      # Copy Rust WASM output into webapp's public directory
      - name: Copy WASM to webapp
        run: |
          cp -r pkg webapp/public/wasm

      # Build the webapp
      - name: Build webapp
        run: |
          cd webapp
          npm run build

      # Add Android platform and sync web build
      - name: Add Android platform
        run: |
          cd webapp
          npx cap add android
          npx cap sync android

      # Build the APK using Gradle
      - name: Build APK
        run: |
          cd webapp/android
          ./gradlew assembleDebug

      # Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: rust-wasm-capacitor-apk
          path: webapp/android/app/build/outputs/apk/debug/app-debug.apk
